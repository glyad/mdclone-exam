<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:commanding="clr-namespace:LogoFX.Client.Mvvm.Commanding;assembly=LogoFX.Client.Mvvm.Commanding.Platform"
                    xmlns:local="clr-namespace:MdClone.Presentation.Shared.Controls"
                    xmlns:helpers="clr-namespace:MdClone.Presentation.Shared.Helpers"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:behaviors="clr-namespace:MdClone.Presentation.Shared.Behaviors"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <SolidColorBrush x:Key="HighlightDarkBrush" Color="#4C4C4C" />
    <SolidColorBrush x:Key="LightGrayBrush" Color="#EBEBEC" />
    <SolidColorBrush x:Key="WhiteBrush" Color="#FFFFFF" />
    <SolidColorBrush x:Key="Button.ChromelessButton.Forehround.Normal.Brush" Color="#A9A9A9" />
    <SolidColorBrush x:Key="ControlsDisabledBrush" Color="#A5FFFFFF" />
    <SolidColorBrush x:Key="TextBoxFocusBorderBrush" Color="#000000" />

    <Style x:Key="ChromelessButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Button.ChromelessButton.Forehround.Normal.Brush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Opacity="0.9" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".9" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type local:ItemsTextBoxControl+TextItem}">
        <Grid helpers:SizeObserver.Observe="True"
              helpers:SizeObserver.ObservedHeight="{Binding Path=ActualHeight, Mode=OneWayToSource}">
            <TextBox x:Name="PART_Text"
                     Text="{Binding Path=Text,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}"
                     Background="Transparent"
                     BorderThickness="0"
                     mah:TextBoxHelper.ClearTextButton="False"
                     mah:TextBoxHelper.Watermark="{Binding Path=Watermark}">
                <i:Interaction.Behaviors>
                    <behaviors:FocusBehavior IsFocused="{Binding Path=IsFocused, Mode=TwoWay}" />
                </i:Interaction.Behaviors>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewKeyDown">
                        <commanding:ExecuteCommandAction Command="{Binding Path=PreviewKeyDownCommand}" UseTriggerParameter="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="KeyDown">
                        <commanding:ExecuteCommandAction Command="{Binding Path=KeyDownCommand}" UseTriggerParameter="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ItemsTextBoxControl+ObjectItem}">
        <Grid Background="Transparent" Cursor="Arrow" Margin="4,0,0,0">
            <materialDesign:Chip
                    x:Name="Chip"
                    VerticalContentAlignment="Center"
                    Content="{Binding Path=Value, Mode=OneWay}"
                    ContentStringFormat="{Binding Path=ItemStringFormat, RelativeSource={RelativeSource AncestorType={x:Type local:ItemsTextBoxControl}}}"
                    ContentTemplate="{Binding Path=ItemTemplate, RelativeSource={RelativeSource AncestorType={x:Type local:ItemsTextBoxControl}}}"
                    ContentTemplateSelector="{Binding Path=ItemTemplateSelector, RelativeSource={RelativeSource AncestorType={x:Type local:ItemsTextBoxControl}}}"
                    Focusable="False"
                    Padding="1"
                    IsDeletable="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DeleteClick">
                        <commanding:ExecuteCommandAction Command="{Binding Path=RemoveCommand}" Parameter="{Binding}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </materialDesign:Chip>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Value.Model.HasErrors, Mode=OneWay}" Value="True">
                <Setter TargetName="Chip" Property="Background" Value="RosyBrown" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="ItemsControlStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <local:ItemsTextBoxPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ItemsTextBoxControl}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource LightGrayBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding" Value="8,0,8,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ItemsTextBoxControl}">
                    <Grid>
                        <Border x:Name="Root"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                ClipToBounds="True" 
                                CornerRadius="2"
                                Cursor="IBeam"                                
                                Padding="{TemplateBinding Padding}">
                            <ItemsControl x:Name="PART_SelectedItems"
                                          VerticalAlignment="Center"
                                          Style="{StaticResource ItemsControlStyle}" />
                        </Border>

                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="True" 
                               Focusable="False">
                            <Grid MinWidth="120" MaxHeight="120">
                                <Border Background="{StaticResource WhiteBrush}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1" />
                                <ListBox x:Name="PART_ListBox" Margin="1" Focusable="False"
                                         ItemStringFormat="{TemplateBinding ItemStringFormat}"
                                         ItemTemplate="{TemplateBinding ItemTemplate}"
                                         ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                         ItemsSource="{Binding Path=AutocompleteItemsSource,
                                                               RelativeSource={RelativeSource TemplatedParent},
                                                               Mode=OneWay}"
                                         KeyboardNavigation.DirectionalNavigation="Contained" />
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Background" Value="{StaticResource ControlsDisabledBrush}" />
                        </Trigger>

                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource TextBoxFocusBorderBrush}" />
                            <Setter TargetName="Root" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>